KS_log_stat <- function(A_est, A_true, k_min) {#
  n <- length(A_true)#
  ks <- max(abs(cumsum(log(A_true) / sum(log(A_true))) - cumsum(log(A_est) / sum(log(A_est)))))#
  return(ks)#
}
k_max <- max(k)#
k_kernel <- k + k0#
out <- lm(log(A_est) ~ log(k_kernel))#
a_alpha <- mean(log(A_est) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k + k0) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est, A_alpha_true)#
a_beta <- mean(log(A_est) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k + k0) / (1 + beta_ml * log(k + k0)) + a_beta#
KS_beta <- KS_log_stat(A_est, A_beta_true)#
a_gamma <- mean(log(A_est) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k + k0) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est, A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k + k0, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k + k0, A_beta_true, lwd = 2, type = "l", col = red)#
points(k + k0, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k[which(k >= k_min)]
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
k_kernel <- k[which(k >= k_min)] + k0#
out <- lm(log(A_est) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[k_kernel]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est, A_alpha_true)#
a_beta <- mean(log(A_est) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k + k0) / (1 + beta_ml * log(k + k0)) + a_beta#
KS_beta <- KS_log_stat(A_est, A_beta_true)#
a_gamma <- mean(log(A_est) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k + k0) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est, A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k + k0, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k + k0, A_beta_true, lwd = 2, type = "l", col = red)#
points(k + k0, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k + k0, A_beta_true, lwd = 2, type = "l", col = red)#
points(k + k0, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha
A_est[k_kernel]
A_est
k
ki <- which(k >= k_min)
ki
k_kernel <- k[ki] + k0
k_kernel
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))
a_alpha
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k + k0, A_beta_true, lwd = 2, type = "l", col = red)#
points(k + k0, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_alpha_true <- (k_kernel) ^ alpha_ml#
KS_alpha <- KS_log_stat(A_est, A_alpha_true)#
a_beta <- mean(log(A_est) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k + k0) / (1 + beta_ml * log(k + k0)) + a_beta#
KS_beta <- KS_log_stat(A_est, A_beta_true)#
a_gamma <- mean(log(A_est) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k + k0) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est, A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k + k0, A_beta_true, lwd = 2, type = "l", col = red)#
points(k + k0, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0
out <- lm(log(A_est[ki]) ~ log(k_kernel))
out
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))
A_alpha_true <- (k_kernel) ^ alpha_ml#
KS_alpha <- KS_log_stat(A_est, A_alpha_true)#
a_beta <- mean(log(A_est) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k + k0) / (1 + beta_ml * log(k + k0)) + a_beta#
KS_beta <- KS_log_stat(A_est, A_beta_true)#
a_gamma <- mean(log(A_est) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k + k0) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est, A_gamma_true)
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta
S_beta <- KS_log_stat(A_est[ki], A_beta_true)
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)
a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k + k0, A_beta_true, lwd = 2, type = "l", col = red)#
points(k + k0, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 2, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 2, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha
a_beta
a_gamma
A_gamma_true <- exp((k_kernel) ^ gamma_ml) - a_gamma
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 2, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 2, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-15-simulated-example/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]
T <- 1000#
alpha <- 0.75#
k0 <- 1#
lambda <- 0.1#
n <- c(5, 2, rep(2, T - 2))#
m_internal <- c(NA, rep(3, T - 1))#
m_external <- c(NA, rep(3, T - 1))#
network <- gen_loglin_model_network_1(#
  T = T,#
  alpha = alpha,#
  lambda = lambda,#
  n = n,#
  m_internal = m_internal,#
  m_external = m_external#
)#
save(network, file = "network.Rdata")
# preliminaries#
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-15-simulated-example/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# generate GT model network with A_k = (k + k0)^alpha#
T <- 1000#
alpha <- 0.75#
k0 <- 1#
lambda <- 0.1#
n <- c(5, 2, rep(2, T - 2))#
m_internal <- c(NA, rep(3, T - 1))#
m_external <- c(NA, rep(3, T - 1))#
network <- gen_loglin_model_network(#
  T = T,#
  alpha = alpha,#
  lambda = lambda,#
  n = n,#
  m_internal = m_internal,#
  m_external = m_external#
)#
save(network, file = "network.Rdata")
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-15-simulated-example/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# generate GT model network with A_k = (k + k0)^alpha#
T <- 1000#
alpha <- 0.75#
k0 <- 1#
lambda <- 0.1#
n <- c(5, 2, rep(2, T - 2))#
m_internal <- c(NA, rep(3, T - 1))#
m_external <- c(NA, rep(3, T - 1))#
network <- gen_loglinear_model_network(#
  T = T,#
  alpha = alpha,#
  lambda = lambda,#
  n = n,#
  m_internal = m_internal,#
  m_external = m_external#
)#
save(network, file = "network.Rdata")
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))
k_min <- 0#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
q <- 0.05
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k_min <- 10#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
#a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
#A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
#KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
#a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
#A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
#KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
#A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
#a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
#A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
#KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
#a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
#A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
#KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
#A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
#a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
#A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
#KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
#a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
#A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
#KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-15-simulated-example/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# define general parameters#
k0 <- 1#
k_min <- 10#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# generate GT model network with A_k = (k + k0)^alpha#
T <- 1000#
alpha <- 0.75#
k0 <- 1#
lambda <- 0.1#
n <- c(5, 2, rep(2, T - 2))#
m_internal <- c(NA, rep(3, T - 1))#
m_external <- c(NA, rep(3, T - 1))#
network <- gen_loglinear_model_network(#
  T = T,#
  alpha = alpha,#
  lambda = lambda,#
  n = n,#
  m_internal = m_internal,#
  m_external = m_external#
)#
save(network, file = "network.Rdata")
# alpha MLE when A_k = (k + k0) ^ alpha with k_min = 10#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
#A_est <- smooth(A[k + 1], k)#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 2, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 2, type = "l", col = green)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 2, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 2, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 2, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml)#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-6.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha
a_beta
a_gamma
a_beta <- (sum(log(A_est[ki]) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel))) / (k_max - k_min + 1)
)
)
sum(log(A_est[ki])
)
sum(log(k_kernel))
sum(log(1 + beta_ml * log(k_kernel))
)
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / length(ki)
a_beta
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / length(ki)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / length(ki)
a_beta
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml) / length(ki)
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml)) / length(ki)
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)
a_gamma
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_gamma <- (sum(A_est[ki]) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha
a_beta
a_gamma
b_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)#
A_alpha_true <- k_kernel ^ alpha_ml + b_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
b_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / length(ki)#
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel)) + b_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
b_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp(k_kernel ^ gamma_ml) + b_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))
b_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)#
A_alpha_true <- k_kernel ^ alpha_ml + b_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
b_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / length(ki)#
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel)) + b_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
b_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp(k_kernel ^ gamma_ml) + b_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
b_alpha
k_kernel
k <- which(A != 0) - 1#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / length(ki)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / length(ki)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel -1, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- mean(log(A_est[ki]) - log(k_kernel) + log(1 + beta_ml * log(k_kernel)))#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- mean(log(A_est[ki]) - (k_kernel) ^ gamma_ml)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
#a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)#
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / length(ki)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha
(sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)
k_kernel
a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
length(ki)
(k_max - k_min + 1)
A_est
A
A <- PAFit(network, k_min = 0, R = 1000)
which(A != 0)
k <- which(A != 0) - 1
k
A_est <- A[k + 1]
A_est
k_max <- max(k)
k_max
ki <- which(k >= k_min)
ki
k[ki]
k_kernel <- k[ki] + k0
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(ki)
a_alpha
A_alpha_true <- (k_kernel) ^ alpha_ml + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)
KS_alpha
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
(k_kernel) ^ alpha_ml + a_alpha
alpha_ml
k_kernel
length(ki)
length(k_kernel)
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(k_kernel)#
#a_alpha <- mean(log(A_est[ki]) - alpha_ml * log(k_kernel))#
A_alpha_true <- (k_kernel) ^ alpha_ml * a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(k_kernel)#
A_alpha_true <- (k_kernel) ^ alpha_ml * a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) * a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) * a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(k_kernel)#
A_alpha_true <- (k_kernel ^ alpha_ml) / a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) * a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) * a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha <- (sum(A_est[ki]) - sum(k_kernel ^ alpha_ml)) / length(k_kernel)#
A_alpha_true <- (k_kernel ^ alpha_ml) * a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) * a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) * a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  log = "xy",#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel)) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel) + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) * a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) * a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
(sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel)) / length(k_kernel)
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel) + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- (k_kernel) / (1 + beta_ml * log(k_kernel)) * a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) * a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), A_alpha_true, lwd = 3, type = "l", col = blue)#
#points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
#points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
(sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel))))) / (k_max - k_min + 1)
(sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(A_est[ki]) - sum(exp(k_kernel ^ gamma_ml))) / length(ki)#
A_gamma_true <- exp((k_kernel) ^ gamma_ml) * a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), A_alpha_true, lwd = 3, type = "l", col = blue)#
points(log(k_kernel), A_beta_true, lwd = 3, type = "l", col = red)#
#points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml + a_gamma
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), A_alpha_true, lwd = 3, type = "l", col = blue)#
points(log(k_kernel), A_beta_true, lwd = 3, type = "l", col = red)#
#points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), A_alpha_true, lwd = 3, type = "l", col = blue)#
points(log(k_kernel), A_beta_true, lwd = 3, type = "l", col = red)#
points(log(k_kernel), A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_alpha_true <- 10 ^ (alpha_ml * log(k_kernel)) + a_alpha
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_alpha_true <- 10 ^ (alpha_ml * log(k_kernel)) * a_alpha
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_alpha_true <- exp(alpha_ml * log(k_kernel)) * a_alpha
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- A[k + 1]#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel) + a_alpha#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml + a_gamma#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  #log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), log(A_alpha_true), lwd = 3, type = "l", col = blue)#
points(log(k_kernel), A_beta_true, lwd = 3, type = "l", col = red)#
points(log(k_kernel), A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  #log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), log(A_alpha_true), lwd = 3, type = "l", col = blue)#
points(log(k_kernel), A_beta_true, lwd = 3, type = "l", col = red)#
points(log(k_kernel), A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  #log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), log(A_alpha_true), lwd = 3, type = "l", col = blue)#
points(log(k_kernel), log(A_beta_true), lwd = 3, type = "l", col = red)#
points(log(k_kernel), log(A_gamma_true), lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4b.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(log(k + k0), log(A_est),#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  #log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(log(k_kernel), A_alpha_true, lwd = 3, type = "l", col = blue)#
points(log(k_kernel), A_beta_true, lwd = 3, type = "l", col = red)#
points(log(k_kernel), A_gamma_true, lwd = 3, type = "l", col = green)#
points(log(k + k0), log(A_est), cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true, lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true + a_alpha, lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true + a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true + a_gamma, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true * a_alpha, lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true * a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true * a_gamma, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true * 10 ^ a_alpha, lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true * a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true * a_gamma, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, 10 ^ A_alpha_true * exp(a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true * a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true * a_gamma, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true) * exp(a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, 10 ^ A_beta_true * a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, 10 ^ A_gamma_true * a_gamma, lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_beta <- (sum(A_est[ki]) - sum(k_kernel) + sum(1 + beta_ml * log(k_kernel))) / (k_max - k_min + 1)#
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel))
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true * a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel))) / (k_max - k_min + 1)
sum(k_kernel / (1 + beta_ml * log(k_kernel))
sum(k_kernel / (1 + beta_ml * log(k_kernel))
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel))
sum(k_kernel / (1 + beta_ml * log(k_kernel)))
sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))
(sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel))
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true * a_beta, lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k_kernel
a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel)) * a_beta
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel)) + a_beta
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, A_beta_true, lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))
a_beta
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
#a_beta <- (sum(A_est[ki]) - sum(k_kernel / (1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
#A_beta_true <- k_kernel / (1 + beta_ml * log(k_kernel)) + a_beta#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true * a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
plot_file = "plot-4c.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated Network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "Simulated Network",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-14-collabnet-kmin=10/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# define general parameters#
k0 <- 1#
k_min <- 11#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-14-collabnet-kmin=10/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# define general parameters#
k0 <- 1#
k_min <- 10#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# non-parametrically estimate A_k values with k_min = 0#
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
KS_log_stat(A_est, A_alpha_true)#
# [1] 0.06632772#
KS_log_stat(A_est, A_beta_true)#
# [1] 0.07330684#
KS_log_stat(A_est, A_gamma_true)#
# [1] 0.03004292#
#
MRE_log(A_est, A_alpha_true, k_max)#
# [1] 1.226451#
MRE_log(A_est, A_beta_true, k_max)#
# [1] 4.092717#
MRE_log(A_est, A_gamma_true, k_max)#
# [1] 1.007477#
#
# non-parametrically estimate A_k values with smoothing#
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
_kernel
k_kernel
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-16-collabnet-kmin=1/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# define general parameters#
k0 <- 1#
k_min <- 1#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-16-collabnet-kmin=1/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-16-collabnet-kmin=1/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]
k0 <- 1#
k_min <- 1#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-14-collabnet-kmin=10/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-daily.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]#
#
# define general parameters#
k0 <- 1#
k_min <- 7#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# non-parametrically estimate A_k values with k_min = 0#
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
# non-parametrically estimate A_k values with smoothing#
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k0 <- 1#
k_min <- 5#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# non-parametrically estimate A_k values with k_min = 0#
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# non-parametrically estimate A_k values with smoothing#
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
rm(list = ls())#
library("magicaxis")#
working_dir <-#
"/Users/paul/Dropbox/research/PA-ML-manuscript/experiment-17-collabnet-yearly-kmin=1/"#
code_file <- "my-functions.R"#
collabnet_file <- "network-yearly.Rdata"#
setwd(working_dir)#
source(paste0(working_dir, code_file))#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")#
cols <- c("grey25" , gg_color_hue(n = 3))#
gray25 <- cols[1]#
red <- cols[2]#
green <- cols[3]#
blue <- cols[4]
k0 <- 1#
k_min <- 1#
k_cut <- 0#
q <- 0.05 # significance level for likelihood ratio conf interval#
#
# load collabnet network#
load(file = collabnet_file)#
in_network <- network[[1]]#
out_network <- network[[2]]#
K <- network[[3]]#
active_node_ids <- network[[4]]#
internal_target_ids <- network[[5]]#
external_target_ids <- network[[6]]#
n <- network[[7]]#
m_internal <- network[[8]]#
m_external <- network[[9]]#
#
# alpha MLE with k_min = 0 when A_k = (k + k0) ^ alpha#
alphas <- seq(0, 2, 0.01)#
no_of_alphas <- length(alphas)#
ll_function <- numeric(no_of_alphas)#
#
for (i in 1:no_of_alphas) {#
  ll_function[i] <- ML_loglinear(network = network, alpha = alphas[i], k0 = k0,#
  k_min = k_min)#
}#
#
alpha_ml_index <- which(ll_function == max(ll_function))#
alpha_ml <- alphas[alpha_ml_index]#
ll_max <- ll_function[alpha_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(alphas[ll_sig_indices])#
CI_upper_bound <- max(alphas[ll_sig_indices])#
alpha_sd <- alpha_ml - CI_lower_bound #
x <- alphas#
y <- ll_function#
region_x <- c(alphas[ll_lower_bound], alphas[ll_lower_bound:ll_upper_bound],#
alphas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-1.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment exponent,") ~ alpha), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\')',#
  alpha_ml, format(round(alpha_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# beta MLE with k_min = 0 when A_k = (k + k0) / (1 + beta * log(k + k0))#
betas <- seq(0, 2, 0.01)#
no_of_betas <- length(betas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_betas)#
#
for (i in 1:no_of_betas) {#
  ll_function[i] <- ML_asymploglinear(network = network, beta = betas[i],#
  k0 = k0, k_min = k_min)#
}#
#
beta_ml_index <- which(ll_function == max(ll_function))#
beta_ml <- betas[beta_ml_index]#
ll_max <- ll_function[beta_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(betas[ll_sig_indices])#
CI_upper_bound <- max(betas[ll_sig_indices])#
beta_sd <- beta_ml - CI_lower_bound #
x <- betas#
y <- ll_function#
region_x <- c(betas[ll_lower_bound], betas[ll_lower_bound:ll_upper_bound],#
betas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-2.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Asymptotic log-linear") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ beta), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\')',#
  beta_ml, format(round(beta_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()#
#
# alpha MLE with k_min = 0 when A_k = exp((k + k0) ^ gamma)#
gammas <- seq(0.25, 0.75, 0.01)#
no_of_gammas <- length(gammas)#
model <- vector("list", length = 3)#
ll_function <- numeric(no_of_gammas)#
#
for (i in 1:no_of_gammas) {#
  ll_function[i] <- ML_logpolynomial(network = network, gamma = gammas[i],#
  k0 = k0, k_min = k_min)#
}#
#
gamma_ml_index <- which(ll_function == max(ll_function))#
gamma_ml <- gammas[gamma_ml_index]#
ll_max <- ll_function[gamma_ml_index]#
ll_sig_indices <- which(ll_function >= ll_max - qchisq(p = (1 - q), df = 1) / 2)#
ll_lower_bound <- min(ll_sig_indices)#
ll_upper_bound <- max(ll_sig_indices)#
CI_lower_bound <- min(gammas[ll_sig_indices])#
CI_upper_bound <- max(gammas[ll_sig_indices])#
gamma_sd <- gamma_ml - CI_lower_bound #
x <- gammas#
y <- ll_function#
region_x <- c(gammas[ll_lower_bound], gammas[ll_lower_bound:ll_upper_bound],#
gammas[ll_upper_bound])#
region_y <- c(min(ll_function), ll_function[ll_lower_bound:ll_upper_bound],#
min(ll_function))#
#
plot_file = "plot-3.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(x, y, #
  main = bquote(.("Log-polynomial") ~ A[k]),#
  xlab = bquote(.("Attachment parameter,") ~ gamma), #
  ylab = "Log-likelihood",#
  type = "l", , bty = "n", axes = FALSE)#
grid(lwd = 2)#
magaxis()#
polygon(region_x, region_y, border = NA, col = adjustcolor(blue, alpha.f = 0.3))#
legend( #
  "topright", #
  c(parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\')',#
  gamma_ml, format(round(gamma_sd, 2), nsmall = 2))),#
  parse(text=sprintf('paste(k[0], \' = %s\')', k0)),#
  parse(text=sprintf('paste(k[min], \' = %s\')', k_min))),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
A <- PAFit(network, k_min = 0, R = 1000)#
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Daily resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-4.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Yearly resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
k <- which(A != 0) - 1#
A_est <- smooth(A[k + 1], k)#
k_max <- max(k)#
ki <- which(k >= k_min)#
k_kernel <- k[ki] + k0#
out <- lm(log(A_est[ki]) ~ log(k_kernel))#
a_alpha <- (sum(log(A_est[ki])) - sum(alpha_ml * log(k_kernel))) / length(k_kernel)#
A_alpha_true <- alpha_ml * log(k_kernel)#
KS_alpha <- KS_log_stat(A_est[ki], A_alpha_true)#
a_beta <- (sum(log(A_est[ki])) - sum(log(k_kernel)) + sum(log(1 + beta_ml * log(k_kernel)))) / (k_max - k_min + 1)#
A_beta_true <- log(k_kernel) - log(1 + beta_ml * log(k_kernel))#
KS_beta <- KS_log_stat(A_est[ki], A_beta_true)#
a_gamma <- (sum(log(A_est[ki])) - sum(k_kernel ^ gamma_ml)) / length(ki)#
A_gamma_true <- (k_kernel) ^ gamma_ml#
KS_gamma <- KS_log_stat(A_est[ki], A_gamma_true)#
#
plot_file = "plot-5.pdf"#
pdf(plot_file, width = 6, height = 6, useDingbats = FALSE)#
plot(k + k0, A_est,#
  main = "CollabNet (Yearly resolution)",#
  xlab = bquote(.("In-degree,") ~ k + k[0]), #
  ylab = bquote(.("Smoothed Attachment Rate,") ~ hat(A)(k)),#
  axes = FALSE,#
  log = "xy",#
  bty = "n",#
  type = "n")#
grid(lwd = 2, equilogs = FALSE)#
magaxis()#
points(k_kernel, exp(A_alpha_true + a_alpha), lwd = 3, type = "l", col = blue)#
points(k_kernel, exp(A_beta_true + a_beta), lwd = 3, type = "l", col = red)#
points(k_kernel, exp(A_gamma_true + a_gamma), lwd = 3, type = "l", col = green)#
points(k + k0, A_est, cex = 0.8, pch = 16, col = gray25)#
legend( #
  "topleft", #
  c(parse(text=sprintf('paste(alpha[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', alpha_ml, format(round(alpha_sd, 2), nsmall = 2),#
  format(round(KS_alpha, 2), nsmall = 2))),#
  parse(text=sprintf('paste(beta[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', beta_ml, format(round(beta_sd, 2), nsmall = 2), #
  format(round(KS_beta, 2), nsmall = 2))),#
  parse(text=sprintf('paste(gamma[ML], \' = %s \', "\u00B1", \' %s\', #
  " (KS", \' = %s \', ")")', gamma_ml, format(round(gamma_sd, 2), nsmall = 2),#
  format(round(KS_gamma, 2), nsmall = 2)))),#
  col = c(blue, red, green),#
  lwd = rep(4, 3),#
  lty = rep(1, 3),#
  cex = 0.8,#
  inset = 0.01,#
  box.lwd = 0,#
  box.col = "grey90",#
  bg = adjustcolor("grey90", alpha.f = 0.75))#
dev.off()
?write.csv
rm(list = ls())#
library(data.tree)#
library(listviewer)#
working_dir <- paste0("/Users/Paul/Dropbox/theming/theme-hierarchy-playground/")#
setwd(working_dir)#
source("functions.R")#
set.seed(12345)#
writeLines(capture.output(sessionInfo()), con = "analyze_sessionInfo.txt")
infile <- "my-theme-table-sci-fi.csv"
table_to_cytoscape(infile)
source("functions.R")
table_to_cytoscape(infile)
?write.csv
source("functions.R")
table_to_cytoscape(infile)
source("functions.R")
table_to_cytoscape(infile)
source("functions.R")
table_to_cytoscape(infile)
?write.csv
head(out)
mydata <- read.delim(file = infile, sep = ",", header = TRUE, stringsAsFactors = FALSE)#
  duplicate_themes <- mydata[duplicated(mydata[, "Theme"]), "Theme"]#
  no_of_duplicate_themes <- length(duplicate_themes)#
#
  for (i in 1:no_of_duplicate_themes) {#
    mytheme <- duplicate_themes[i]#
    theme_indices <- which(mydata[, "Theme"] == mytheme)#
    no_of_duplicates <- length(theme_indices)#
    mydata[theme_indices, "Theme"] <- paste0(mytheme, "::", 1:no_of_duplicates)#
  }#
#
  out <- data.frame(#
    source <- mydata[-1, 3],#
    target <- mydata[-1, 1],#
    stringsAsFactors = FALSE#
  )
head(out)
colnames(out) <- c("source", "target")
head(out)
write.csv(out, file = "test.csv", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.csv(out, file = "test.csv", row.names = FALSE, quote = FALSE)
